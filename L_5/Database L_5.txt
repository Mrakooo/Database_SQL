Марченко Андрій 241
Github: https://github.com/Mrakooo/Database_SQL
   
Проектування БД, нормалізація, створення таблиць (головний ключ, обмеження, зовнішній ключ, зв'язку, довідкова цілісність) і завантаження даних

1.Проаналізувати приклад універсального відношення. З'ясувати які його колонки містять надлишкові дані. Виконати нормалізацію універсального відношення, розбивши його на кілька таблиць.  

2.Скласти SQL-script, що виконує:
a.Створення таблиць бази даних. Команди для створення таблиці повинні містити головний ключ, обмеження типу null / not null, default, check, створення зв'язків з умовами посилальної цілісності
b.Завантаження даних в таблиці

3.Побудувати діаграму зв'язків таблиць бази даних використовуючи інструмент Designer. 

4.Створити зв’язки в базі даних між таблицями. 
a.Вивчити роботу створення зв’язків між таблицями в полі Designer
b.Створити майстром e Designer кілька варіантів зв’язків у базі даних
c.Проаналізувати і пояснити особливості зв’язків, створених Designer
d.Порівняти з тими, що написані самостійно.
e.Зробити висновки 

5.Створити і перевірити представлення для отримання універсального відношення з набору нормалізованих таблиць бази даних.



DROP DATABASE IF EXISTS mylaboratorydatabase;
CREATE DATABASE mylaboratorydatabase;

CREATE TABLE library(
id INT NOT NULL PRIMARY KEY,
number INT NOT NULL,
novelty BOOLEAN NOT NULL DEFAULT 0,
title VARCHAR(255) NOT NULL DEFAULT 'unknown',
price FLOAT(10) NOT NULL DEFAULT 0 CHECK (price >= 0),
edition_id INT NOT NULL,
page_amount INT NOT NULL DEFAULT 0 CHECK (page_amount >= 0),
format VARCHAR(255) DEFAULT 'unknown',
date DATE DEFAULT NULL,
circulation INT NOT NULL DEFAULT 0 CHECK (circulation >= 0),
topic_id INT NOT NULL,
category_id INT NOT NULL
);


INSERT INTO library(id, number, novelty, title, price, edition_id, page_amount, format, date, circulation, topic_id, category_id)
VALUES
(2, 5110, 0, 'Апаратні засоби мультимедіа. Відеосистема РС', 15.51, '4', 400, '70х100/16', '2000-07-24', 5000, '3', '9'),
(8, 4985, 0, 'Засвой самостійно модернізацію та ремонт ПК за 24 години, 2-ге вид.', 18.90, '9', 288, '70х100/16', '2000-07-07', 5000, '3', '9'),
(9, 5141, 0, 'Структури даних та алгоритми', 37.80, '9', 384, '70x100/16','2000-09-29', 5000, '3', '9'),
(20, 5127, 0, 'Автоматизація інженерно-графічних робіт', 11.58, '11', 256, '70x100/16', '2000-06-15', 5000, '3', '9'),
(31, 5112, 0, 'Апаратні засоби мультимедіа. Відеосистема РС', 15.51, '10', 400, '70x100/16', '2000-07-24',5000, '3', '10'),
(46, 5199, 0, 'Залізо IBM 2001', 30.07, '11', 368, '70x100/16', '2000-12-02', 5000, '3', '10'),
(50, 3851, 0, 'Захист інформації та безпека комп`ютерних систем', 26.00, '1', 480, '84x108/16', '', 5000, '3', '6'),
(58, 3932, 0, 'Як перетворити персональний комп`ютер на вимірювальний комплекс', 7.65, '7', 144, '60х88/16', '1999-06-09', 5000, '3', '3'),
(59, 4713, 0, 'Plug-ins. Додаткові програми для музичних програм', 11.41, '7', 144, '70х100/16', '2000-02-22', 5000, '3', '3'),
(175, 5217, 0, 'Windows МЕ. Найновіші версії програм', 16.57, '12', 320, '70х100/16', '2000-08-25', 5000, '1', '8'),
(176, 4829, 0, '8 Professional крок за кроком з CD', 27.25, '8', 320, '70х100/16', '2000-04-28', 5000, '1', '8'),
(188, 5170, 0, '11 версії', 24.43, '7', 346, '70х100/16', '2000-09-29', 5000, '1', '11'),
(191, 860, 0, 'Операційна система 4', 3.50, '4', 395, '84х100/16', '1997-05-05', 5000, '1', '4'),
(203, 44, 0, 'Відповіді на актуальні запитання щодо OS/2 Warp', 5.00, '1', 352, '60х84/16', '1996-03-20', 5000, '1', '1'),
(206, 5176, 0, 'Windows Ме. Супутник користувача', 12.79, '4', 306, '', '2000-10-10', 5000, '1', '1'),
(209, 5462, 0, 'Мова 4 С++. Лекції та вправи', 29.00, '1', 656, '84х108/16', '2000-12-12', 5000, '4', '7'),
(210, 4982, 0, 'Мова 4 С. Лекції та вправи', 29.00, '1', 432, '84х108/16', '2000-07-12', 5000, '4', '7'),
(220, 4687, 0, 'Ефективне використання С++ .50 рекомендацій щодо покращення ваших програм та проектів', 17.60, '7', 240,'70x100/16', '2000-02-03', 5000, '4', '7'), 
(222, 235, 0, 'Інформаційні системи і структури даних', 0, '3', 288, '60х90/16', '', 400, '3', '3'),
(225, 8746, 1, 'Бази даних в інформаційних системах', 25.00, '5', 418, '60x84/16', '2018-07-25', 100, '4', '5'),
(226, 2154, 1, 'Сервер на основі операційної системи, FreeBSD 6.1', 27.75, '5', 216, '60x84/16', '2015-03-11', 500, '4', '1'),
(245, 2662, 0, 'Організація баз даних та знань', 0, '6', 208, '60х90/16', '2001-10-10', 1000, '4', '5'),
(247, 5641, 1, 'Організація баз даних та знань', 15.50, '4', 384, '70х100/16', '2021-12-15', 5000, '4', '5'),
(15, 3234, 0, 'Книга під номером 52413', 40.5, '2', 1500, '70х100/16', '2023-02-20', 8000, '2', '2'),
(48, 112 , 1, 'Книга null', 7, '2', 30, NULL, NULL, 200, '2', '2');



CREATE TABLE book_category(
    id INT(10) PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE book_edition(
    id INT(10) PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE book_topic(
    id INT(10) PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL
);



INSERT INTO book_category (name) 
VALUES 
('Інші операційні системи'),
('EXTRA BOOKS'),
('Інші книги'),
('Unix'),
('SQL'),
('Захист і безпека ПК'),
('C&C++'),
('Windows 2000'),
('Підручники'),
('Апаратні засоби ПК'),
('Linux');

INSERT INTO book_edition (name) 
VALUES 
('DiaSoft'),
('MOD'),
('Києво-Могилянська академія'),
('Видавнича група BHV'),
('Університет "Україна"'),
('Вінниця: ВДТУ'),
('ДМК'),
('Эком'),
('Вільямс'),
('Видавнича BHV'),
('МикроАрт'),
('Триумф');

INSERT INTO book_topic (name)
VALUES 
('Операційні системи'),
('Перевірка запитів'),
('Використання ПК в цілому'),
('Програмування');



ALTER TABLE library ADD FOREIGN KEY(category_id) REFERENCES book_category(id) ON DELETE CASCADE;
ALTER TABLE library ADD FOREIGN KEY(edition_id) REFERENCES book_edition(id) ON DELETE CASCADE;
ALTER TABLE library ADD FOREIGN KEY(topic_id) REFERENCES book_topic(id) ON DELETE CASCADE;


DROP VIEW IF EXISTS view_name;
CREATE VIEW IF NOT EXISTS view_name AS
SELECT DISTINCT id, number, novelty, title, price, edition_id, page_amount, format, date, circulation, topic_id, category_id FROM library
JOIN book_category ON book_category.id = library.category_id
JOIN book_edition ON book_edition.id = library.edition_id
JOIN book_topic ON book_topic.id = library.topic_id;





